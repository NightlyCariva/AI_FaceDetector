import streamlit as st
import os
from dotenv import load_dotenv

# Charger les variables d'environnement
load_dotenv()

# Configuration de la page
st.set_page_config(
    page_title=os.getenv('APP_TITLE', 'Analyseur de Visages IA'),
    page_icon=os.getenv('APP_ICON', 'üé≠'),
    layout="wide"
)

def main():
    """Page d'accueil principale"""
    
    # Titre principal
    st.title("Analyseur de Visages IA")
    st.markdown("---")
    
    # Zone d'avertissement
    st.error("""
    **‚ö†Ô∏è AVERTISSEMENT IMPORTANT**
    
    Ce projet a √©t√© d√©velopp√© dans le cadre d'un cours sur la **Protection des Donn√©es** √† l'UPJV 
    pour illustrer les d√©fis et enjeux li√©s au traitement de donn√©es biom√©triques par l'Intelligence Artificielle. 
    Il d√©montre concr√®tement le potentiel de l'IA et les raisons de l'implications du RGPD dans le d√©veloppement 
    d'applications d'IA.
    """)
    
    # Radio button de consentement
    consent = st.radio(
        "Consentement d'utilisation:",
        ["Je n'ai pas pris connaissance", 
         "J'ai pris connaissance de la finalit√© du projet et j'atteste ne l'utiliser que dans le cadre p√©dagogique autoris√©"],
        index=0
    )
    
    st.markdown("---")
    
    # Grille des fonctionnalit√©s
    st.header("Fonctionnalit√©s")
    
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        st.info("""
        **D√©tection de Visages**
        
        Identification automatique des visages dans les images et vid√©os
        """)
    
    with col2:
        st.info("""
        **Estimation d'Age**
        
        Pr√©diction de la tranche d'√¢ge des personnes d√©tect√©es
        """)
    
    with col3:
        st.info("""
        **Classification Genre**
        
        Identification du genre apparent des individus
        """)
    
    with col4:
        st.info("""
        **Analyse Emotions**
        
        Reconnaissance des expressions faciales et √©motions
        """)
    
    st.markdown("---")
    
    # Modes disponibles
    st.header("Modes Disponibles")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.subheader("Mode 1: Upload Vid√©o")
        st.write("""
        Analysez des vid√©os pr√©-enregistr√©es en uploadant vos fichiers. 
        Id√©al pour l'analyse compl√®te et d√©taill√©e de contenus vid√©o existants.
        
        - Upload de vid√©os (MP4, AVI, MOV, MKV)
        - Analyse compl√®te frame par frame
        - Export des r√©sultats en CSV
        - T√©l√©chargement de la vid√©o annot√©e
        """)
        
        if st.button("Acc√©der au Mode 1", key="mode1"):
            if consent.startswith("J'ai pris connaissance"):
                st.session_state.page = "mode1"
                st.rerun()
            else:
                st.error("Vous devez prendre connaissance de la finalit√© du projet avant d'acc√©der aux modes d'analyse.")
    
    with col2:
        st.subheader("Mode 2: Temps R√©el")
        st.write("""
        Analysez en temps r√©el via votre webcam pour des d√©monstrations 
        interactives et des tests instantan√©s.
        
        - Analyse en temps r√©el via webcam
        - D√©tection instantan√©e des visages
        - Statistiques live
        - Export des sessions en CSV
        """)
        
        if st.button("Acc√©der au Mode 2", key="mode2"):
            if consent.startswith("J'ai pris connaissance"):
                st.session_state.page = "mode2"
                st.rerun()
            else:
                st.error("Vous devez prendre connaissance de la finalit√© du projet avant d'acc√©der aux modes d'analyse.")

if __name__ == "__main__":
    # Initialisation de la session
    if "page" not in st.session_state:
        st.session_state.page = "home"
    
    # Navigation entre les pages
    if st.session_state.page == "home":
        main()
    elif st.session_state.page == "mode1":
        # Bouton retour
        if st.button("‚Üê Retour √† l'accueil"):
            st.session_state.page = "home"
            st.rerun()
        
        # Importer et ex√©cuter le mode 1
        from mode1_upload import run_mode1
        run_mode1()
        
    elif st.session_state.page == "mode2":
        # Bouton retour
        if st.button("‚Üê Retour √† l'accueil"):
            st.session_state.page = "home"
            st.rerun()
        
        # Importer et ex√©cuter le mode 2
        from mode2_realtime import run_mode2
        run_mode2() 